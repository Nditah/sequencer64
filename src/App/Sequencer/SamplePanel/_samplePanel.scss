@use 'styles/placeholders' as *;
@use 'styles/mixins' as *;
@use 'styles/colors' as *;

#samplePanel {
  #samplePanelBorder {
    @extend %noEventsLayerAbs;
    @extend %borderActive;
    top: 0;
    border-color: $color-none;
    &.highlight {
      border-color: initial;
    }
  }

  .menu {
    @extend %full;
    padding: 0.25rem;
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    grid-template-rows: 1fr 1fr 1fr;
    gap: 0.2rem;

    .sampleBtn {
      cursor: pointer;
      position: relative;
      @include flex();
      @extend %border;
      @extend %bgSampleBtn;
      border: 2px solid red;

      @media (hover: hover) {
        &:hover {
          border: 1px solid $white;
        }
      }

      .icon {
        height: 5vw;
        max-height: 2rem;
        width: 5vw;
        max-width: 2rem;
      }

      .border,
      .bgFlash {
        @extend %noEventsLayerAbs;
        opacity: 0;
        transition: 400ms;
        border-radius: 0;
      }
      .bgFlash {
        @extend %bgBright;
      }
    }
    .sampleBtn.flash,
    .sampleBtn.pulse {
      .border,
      .bgFlash {
        transition: none;
        opacity: 1;
      }
    }
  }

  .editMenu {
    @extend %full;
    white-space: nowrap;
    overflow-x: auto;
    overflow-y: hidden;
    @extend %bg;
    @extend %borderHalf;
    border-radius: 0;
    padding-left: 4rem;

    &.flex {
      @include flex(row, space-evenly);
    }

    @media (orientation: landscape) {
      white-space: initial;
      overflow-x: hidden;
      overflow-y: auto;

      &.flex {
        @include flex(column, space-evenly);
      }
    }

    .close.btn {
      @extend %closeBtnSmall;
    }
    .dummy {
      position: absolute;
      left: 0;
      @extend %dummySmall;
    }

    .sampleMenuBtn {
      width: 5rem;
      height: 100%;
      @include flex(column);
      display: inline-flex;
      background: transparent;
      border: none;
      border-radius: 0.5rem;

      @media (hover: hover) {
        &:hover {
          border: 1px solid $white;
        }
      }

      @media (orientation: landscape) {
        width: 100%;
        height: 5rem;
        margin-bottom: 0.5rem;
        flex-direction: row;
      }

      .icon {
        max-height: 4rem;
      }

      p {
        width: 100%;
        @extend %text;

        @media (orientation: landscape) {
          text-align: left;
        }
      }
    }
  }
}

.spAlertWrapper {
  pointer-events: none;
  position: relative;
  top: -3rem;
  margin: 0 auto;
  width: 100%;

  @media (orientation: landscape) {
    top: 0;
    z-index: 2;
  }

  .spAlert {
    position: fixed;
    width: 100%;
    height: 3rem;
    @include flex(row, space-evenly);
    @extend %bg3q;
    transform: translateX(-0.25rem);
    opacity: 0;
    transition: 1500ms;

    @media (orientation: landscape) {
      width: 48%;
    }

    .alert {
      text-align: center;
    }

    .icon {
      width: auto;
    }

    .dummy {
      width: 2rem;
    }
  }

  .spAlert.fadeOut2 {
    opacity: 1;
  }

  .spAlert.fadeOut {
    opacity: 1;
    transition: none;
  }

  .spAlert .icon {
    height: 1.5rem;
    transform: translateY(0);
    animation: none;
  }

  .spAlert.fadeOut2 .icon {
    animation: bounce 1s linear infinite;
  }
  .spAlert.fadeOut2 .icon.up {
    animation: bounceUp 1s linear infinite;
  }
  .spAlert.fadeOut2 .icon.left {
    animation: bounceLeft 1s linear infinite;
  }
}
